// This file was automatically generated by makeqstrdata.py

QDEF(MP_QSTRnull, (const byte*)"\x00\x00\x00" "")
QDEF(MP_QSTR_, (const byte*)"\x05\x15\x00" "")
QDEF(MP_QSTR___dir__, (const byte*)"\x7a\x8f\x07" "__dir__")
QDEF(MP_QSTR__0x0a_, (const byte*)"\xaf\xb5\x01" "\x0a")
QDEF(MP_QSTR__space_, (const byte*)"\x85\xb5\x01" " ")
QDEF(MP_QSTR__star_, (const byte*)"\x8f\xb5\x01" "*")
QDEF(MP_QSTR__slash_, (const byte*)"\x8a\xb5\x01" "/")
QDEF(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x94\x08" "<module>")
QDEF(MP_QSTR__, (const byte*)"\xfa\xb5\x01" "_")
QDEF(MP_QSTR___call__, (const byte*)"\xa7\xf9\x08" "__call__")
QDEF(MP_QSTR___class__, (const byte*)"\x2b\xc5\x09" "__class__")
QDEF(MP_QSTR___delitem__, (const byte*)"\xfd\x35\x0b" "__delitem__")
QDEF(MP_QSTR___enter__, (const byte*)"\x6d\xba\x09" "__enter__")
QDEF(MP_QSTR___exit__, (const byte*)"\x45\xf8\x08" "__exit__")
QDEF(MP_QSTR___getattr__, (const byte*)"\x40\xf8\x0b" "__getattr__")
QDEF(MP_QSTR___getitem__, (const byte*)"\x26\x39\x0b" "__getitem__")
QDEF(MP_QSTR___hash__, (const byte*)"\xf7\xc8\x08" "__hash__")
QDEF(MP_QSTR___init__, (const byte*)"\x5f\xa5\x08" "__init__")
QDEF(MP_QSTR___int__, (const byte*)"\x16\x1b\x07" "__int__")
QDEF(MP_QSTR___iter__, (const byte*)"\xcf\x32\x08" "__iter__")
QDEF(MP_QSTR___len__, (const byte*)"\xe2\xb0\x07" "__len__")
QDEF(MP_QSTR___main__, (const byte*)"\x8e\x13\x08" "__main__")
QDEF(MP_QSTR___module__, (const byte*)"\xff\x30\x0a" "__module__")
QDEF(MP_QSTR___name__, (const byte*)"\xe2\x38\x08" "__name__")
QDEF(MP_QSTR___new__, (const byte*)"\x79\x15\x07" "__new__")
QDEF(MP_QSTR___next__, (const byte*)"\x02\x73\x08" "__next__")
QDEF(MP_QSTR___qualname__, (const byte*)"\x6b\x00\x0c" "__qualname__")
QDEF(MP_QSTR___repr__, (const byte*)"\x10\x0b\x08" "__repr__")
QDEF(MP_QSTR___setitem__, (const byte*)"\x32\x3e\x0b" "__setitem__")
QDEF(MP_QSTR___str__, (const byte*)"\xd0\xcd\x07" "__str__")
QDEF(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x8c\x0f" "ArithmeticError")
QDEF(MP_QSTR_AssertionError, (const byte*)"\x97\x5a\x0e" "AssertionError")
QDEF(MP_QSTR_AttributeError, (const byte*)"\x21\xde\x0e" "AttributeError")
QDEF(MP_QSTR_BaseException, (const byte*)"\x07\x92\x0d" "BaseException")
QDEF(MP_QSTR_EOFError, (const byte*)"\x91\xbf\x08" "EOFError")
QDEF(MP_QSTR_Ellipsis, (const byte*)"\xf0\xe0\x08" "Ellipsis")
QDEF(MP_QSTR_Exception, (const byte*)"\xf2\x29\x09" "Exception")
QDEF(MP_QSTR_GeneratorExit, (const byte*)"\x16\x62\x0d" "GeneratorExit")
QDEF(MP_QSTR_ImportError, (const byte*)"\x20\x9c\x0b" "ImportError")
QDEF(MP_QSTR_IndentationError, (const byte*)"\x5c\x20\x10" "IndentationError")
QDEF(MP_QSTR_IndexError, (const byte*)"\x83\xad\x0a" "IndexError")
QDEF(MP_QSTR_KeyError, (const byte*)"\xea\x00\x08" "KeyError")
QDEF(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\xe2\x11" "KeyboardInterrupt")
QDEF(MP_QSTR_LookupError, (const byte*)"\xff\x69\x0b" "LookupError")
QDEF(MP_QSTR_MemoryError, (const byte*)"\xdc\x83\x0b" "MemoryError")
QDEF(MP_QSTR_NameError, (const byte*)"\xba\x2d\x09" "NameError")
QDEF(MP_QSTR_NoneType, (const byte*)"\x17\x68\x08" "NoneType")
QDEF(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x98\x13" "NotImplementedError")
QDEF(MP_QSTR_OSError, (const byte*)"\xa1\x65\x07" "OSError")
QDEF(MP_QSTR_OverflowError, (const byte*)"\x81\xe1\x0d" "OverflowError")
QDEF(MP_QSTR_RuntimeError, (const byte*)"\x61\xf1\x0c" "RuntimeError")
QDEF(MP_QSTR_StopIteration, (const byte*)"\xea\x1c\x0d" "StopIteration")
QDEF(MP_QSTR_SyntaxError, (const byte*)"\x94\x8f\x0b" "SyntaxError")
QDEF(MP_QSTR_SystemExit, (const byte*)"\x20\xff\x0a" "SystemExit")
QDEF(MP_QSTR_TypeError, (const byte*)"\x25\x96\x09" "TypeError")
QDEF(MP_QSTR_ValueError, (const byte*)"\x96\x87\x0a" "ValueError")
QDEF(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x27\x11" "ZeroDivisionError")
QDEF(MP_QSTR_abs, (const byte*)"\x95\x32\x03" "abs")
QDEF(MP_QSTR_all, (const byte*)"\x44\x33\x03" "all")
QDEF(MP_QSTR_any, (const byte*)"\x13\x33\x03" "any")
QDEF(MP_QSTR_append, (const byte*)"\x6b\x97\x06" "append")
QDEF(MP_QSTR_args, (const byte*)"\xc2\xc6\x04" "args")
QDEF(MP_QSTR_bool, (const byte*)"\xeb\x3c\x04" "bool")
QDEF(MP_QSTR_builtins, (const byte*)"\xf7\x31\x08" "builtins")
QDEF(MP_QSTR_bytearray, (const byte*)"\x76\xa3\x09" "bytearray")
QDEF(MP_QSTR_bytecode, (const byte*)"\x22\x7d\x08" "bytecode")
QDEF(MP_QSTR_bytes, (const byte*)"\x5c\xb2\x05" "bytes")
QDEF(MP_QSTR_callable, (const byte*)"\x0d\x70\x08" "callable")
QDEF(MP_QSTR_chr, (const byte*)"\xdc\x4c\x03" "chr")
QDEF(MP_QSTR_classmethod, (const byte*)"\xb4\x8c\x0b" "classmethod")
QDEF(MP_QSTR_clear, (const byte*)"\x7c\xa0\x05" "clear")
QDEF(MP_QSTR_close, (const byte*)"\x33\x67\x05" "close")
QDEF(MP_QSTR_const, (const byte*)"\xc0\xff\x05" "const")
QDEF(MP_QSTR_copy, (const byte*)"\xe0\xdb\x04" "copy")
QDEF(MP_QSTR_count, (const byte*)"\xa6\x4d\x05" "count")
QDEF(MP_QSTR_dict, (const byte*)"\x3f\xfc\x04" "dict")
QDEF(MP_QSTR_dir, (const byte*)"\xfa\x1e\x03" "dir")
QDEF(MP_QSTR_divmod, (const byte*)"\xb8\x04\x06" "divmod")
QDEF(MP_QSTR_end, (const byte*)"\x0a\x23\x03" "end")
QDEF(MP_QSTR_endswith, (const byte*)"\x1b\xa3\x08" "endswith")
QDEF(MP_QSTR_eval, (const byte*)"\x9b\xa6\x04" "eval")
QDEF(MP_QSTR_exec, (const byte*)"\x1e\xc0\x04" "exec")
QDEF(MP_QSTR_extend, (const byte*)"\x63\xe8\x06" "extend")
QDEF(MP_QSTR_find, (const byte*)"\x00\x34\x04" "find")
QDEF(MP_QSTR_format, (const byte*)"\x26\x33\x06" "format")
QDEF(MP_QSTR_from_bytes, (const byte*)"\x35\x74\x0a" "from_bytes")
QDEF(MP_QSTR_get, (const byte*)"\x33\x3b\x03" "get")
QDEF(MP_QSTR_getattr, (const byte*)"\xc0\x17\x07" "getattr")
QDEF(MP_QSTR_globals, (const byte*)"\x9d\x49\x07" "globals")
QDEF(MP_QSTR_hasattr, (const byte*)"\x8c\xb0\x07" "hasattr")
QDEF(MP_QSTR_hash, (const byte*)"\xb7\x70\x04" "hash")
QDEF(MP_QSTR_id, (const byte*)"\x28\x6f\x02" "id")
QDEF(MP_QSTR_index, (const byte*)"\x7b\x28\x05" "index")
QDEF(MP_QSTR_insert, (const byte*)"\x12\x54\x06" "insert")
QDEF(MP_QSTR_int, (const byte*)"\x16\x53\x03" "int")
QDEF(MP_QSTR_isalpha, (const byte*)"\xeb\x37\x07" "isalpha")
QDEF(MP_QSTR_isdigit, (const byte*)"\xa8\x9a\x07" "isdigit")
QDEF(MP_QSTR_isinstance, (const byte*)"\xb6\xbe\x0a" "isinstance")
QDEF(MP_QSTR_islower, (const byte*)"\xfc\x80\x07" "islower")
QDEF(MP_QSTR_isspace, (const byte*)"\x5b\xf8\x07" "isspace")
QDEF(MP_QSTR_issubclass, (const byte*)"\xb5\x7f\x0a" "issubclass")
QDEF(MP_QSTR_isupper, (const byte*)"\xdd\xa7\x07" "isupper")
QDEF(MP_QSTR_items, (const byte*)"\xe3\x53\x05" "items")
QDEF(MP_QSTR_iter, (const byte*)"\x8f\x21\x04" "iter")
QDEF(MP_QSTR_join, (const byte*)"\xa7\x5c\x04" "join")
QDEF(MP_QSTR_key, (const byte*)"\x32\x6d\x03" "key")
QDEF(MP_QSTR_keys, (const byte*)"\x01\x13\x04" "keys")
QDEF(MP_QSTR_len, (const byte*)"\x62\x40\x03" "len")
QDEF(MP_QSTR_list, (const byte*)"\x27\x1d\x04" "list")
QDEF(MP_QSTR_little, (const byte*)"\x89\x6a\x06" "little")
QDEF(MP_QSTR_locals, (const byte*)"\x3b\xa1\x06" "locals")
QDEF(MP_QSTR_lower, (const byte*)"\xc6\xcb\x05" "lower")
QDEF(MP_QSTR_lstrip, (const byte*)"\xe5\xb9\x06" "lstrip")
QDEF(MP_QSTR_main, (const byte*)"\xce\xb7\x04" "main")
QDEF(MP_QSTR_map, (const byte*)"\xb9\x43\x03" "map")
QDEF(MP_QSTR_micropython, (const byte*)"\x0b\x7c\x0b" "micropython")
QDEF(MP_QSTR_next, (const byte*)"\x42\x88\x04" "next")
QDEF(MP_QSTR_object, (const byte*)"\x90\x8d\x06" "object")
QDEF(MP_QSTR_open, (const byte*)"\xd1\x3a\x04" "open")
QDEF(MP_QSTR_ord, (const byte*)"\x1c\x5e\x03" "ord")
QDEF(MP_QSTR_pop, (const byte*)"\x2a\x73\x03" "pop")
QDEF(MP_QSTR_popitem, (const byte*)"\xbf\x2c\x07" "popitem")
QDEF(MP_QSTR_pow, (const byte*)"\x2d\x73\x03" "pow")
QDEF(MP_QSTR_print, (const byte*)"\x54\xc6\x05" "print")
QDEF(MP_QSTR_range, (const byte*)"\x1a\x5e\x05" "range")
QDEF(MP_QSTR_read, (const byte*)"\xb7\xf9\x04" "read")
QDEF(MP_QSTR_readinto, (const byte*)"\x4b\xbf\x08" "readinto")
QDEF(MP_QSTR_readline, (const byte*)"\xf9\x19\x08" "readline")
QDEF(MP_QSTR_remove, (const byte*)"\x63\x8a\x06" "remove")
QDEF(MP_QSTR_replace, (const byte*)"\x49\x25\x07" "replace")
QDEF(MP_QSTR_repr, (const byte*)"\xd0\xf7\x04" "repr")
QDEF(MP_QSTR_reverse, (const byte*)"\x25\x2a\x07" "reverse")
QDEF(MP_QSTR_rfind, (const byte*)"\xd2\x9c\x05" "rfind")
QDEF(MP_QSTR_rindex, (const byte*)"\xe9\x2b\x06" "rindex")
QDEF(MP_QSTR_round, (const byte*)"\xe7\x25\x05" "round")
QDEF(MP_QSTR_rsplit, (const byte*)"\xa5\x00\x06" "rsplit")
QDEF(MP_QSTR_rstrip, (const byte*)"\x3b\x95\x06" "rstrip")
QDEF(MP_QSTR_self, (const byte*)"\x79\x77\x04" "self")
QDEF(MP_QSTR_send, (const byte*)"\xb9\x76\x04" "send")
QDEF(MP_QSTR_sep, (const byte*)"\x23\x8f\x03" "sep")
QDEF(MP_QSTR_set, (const byte*)"\x27\x8f\x03" "set")
QDEF(MP_QSTR_setattr, (const byte*)"\xd4\xa8\x07" "setattr")
QDEF(MP_QSTR_setdefault, (const byte*)"\x6c\xa3\x0a" "setdefault")
QDEF(MP_QSTR_sort, (const byte*)"\xbf\x9d\x04" "sort")
QDEF(MP_QSTR_sorted, (const byte*)"\x5e\x15\x06" "sorted")
QDEF(MP_QSTR_split, (const byte*)"\xb7\x33\x05" "split")
QDEF(MP_QSTR_start, (const byte*)"\x85\xef\x05" "start")
QDEF(MP_QSTR_startswith, (const byte*)"\x74\xe8\x0a" "startswith")
QDEF(MP_QSTR_staticmethod, (const byte*)"\x62\xaf\x0c" "staticmethod")
QDEF(MP_QSTR_step, (const byte*)"\x57\x36\x04" "step")
QDEF(MP_QSTR_stop, (const byte*)"\x9d\x36\x04" "stop")
QDEF(MP_QSTR_str, (const byte*)"\x50\x8d\x03" "str")
QDEF(MP_QSTR_strip, (const byte*)"\x29\x1e\x05" "strip")
QDEF(MP_QSTR_sum, (const byte*)"\x2e\x8d\x03" "sum")
QDEF(MP_QSTR_super, (const byte*)"\xc4\xb2\x05" "super")
QDEF(MP_QSTR_throw, (const byte*)"\xb3\x44\x05" "throw")
QDEF(MP_QSTR_to_bytes, (const byte*)"\xd8\x3e\x08" "to_bytes")
QDEF(MP_QSTR_tuple, (const byte*)"\xfd\x41\x05" "tuple")
QDEF(MP_QSTR_type, (const byte*)"\x9d\x7f\x04" "type")
QDEF(MP_QSTR_update, (const byte*)"\xb4\x76\x06" "update")
QDEF(MP_QSTR_upper, (const byte*)"\x27\x94\x05" "upper")
QDEF(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x82\x05" "utf-8")
QDEF(MP_QSTR_value, (const byte*)"\x4e\x34\x05" "value")
QDEF(MP_QSTR_values, (const byte*)"\x7d\xbe\x06" "values")
QDEF(MP_QSTR_write, (const byte*)"\x98\xa8\x05" "write")
QDEF(MP_QSTR_zip, (const byte*)"\xe6\xac\x03" "zip")
QDEF(MP_QSTR___add__, (const byte*)"\xc4\x82\x07" "__add__")
QDEF(MP_QSTR___aenter__, (const byte*)"\x4c\x84\x0a" "__aenter__")
QDEF(MP_QSTR___aexit__, (const byte*)"\xc4\xcf\x09" "__aexit__")
QDEF(MP_QSTR___aiter__, (const byte*)"\x4e\x2b\x09" "__aiter__")
QDEF(MP_QSTR___anext__, (const byte*)"\x83\xb4\x09" "__anext__")
QDEF(MP_QSTR___bases__, (const byte*)"\x03\x30\x09" "__bases__")
QDEF(MP_QSTR___bool__, (const byte*)"\x2b\x65\x08" "__bool__")
QDEF(MP_QSTR___build_class__, (const byte*)"\x42\x88\x0f" "__build_class__")
QDEF(MP_QSTR___contains__, (const byte*)"\xc6\x5f\x0c" "__contains__")
QDEF(MP_QSTR___dict__, (const byte*)"\x7f\x54\x08" "__dict__")
QDEF(MP_QSTR___eq__, (const byte*)"\x71\x3e\x06" "__eq__")
QDEF(MP_QSTR___ge__, (const byte*)"\xa7\x46\x06" "__ge__")
QDEF(MP_QSTR___gt__, (const byte*)"\xb6\x82\x06" "__gt__")
QDEF(MP_QSTR___iadd__, (const byte*)"\x6d\x4a\x08" "__iadd__")
QDEF(MP_QSTR___import__, (const byte*)"\x38\x3e\x0a" "__import__")
QDEF(MP_QSTR___isub__, (const byte*)"\x08\x78\x08" "__isub__")
QDEF(MP_QSTR___le__, (const byte*)"\xcc\x13\x06" "__le__")
QDEF(MP_QSTR___lt__, (const byte*)"\x5d\x68\x06" "__lt__")
QDEF(MP_QSTR___ne__, (const byte*)"\x0e\x0b\x06" "__ne__")
QDEF(MP_QSTR___path__, (const byte*)"\xc8\x23\x08" "__path__")
QDEF(MP_QSTR___repl_print__, (const byte*)"\x00\xbb\x0e" "__repl_print__")
QDEF(MP_QSTR___reversed__, (const byte*)"\x61\xff\x0c" "__reversed__")
QDEF(MP_QSTR___sub__, (const byte*)"\x21\x09\x07" "__sub__")
QDEF(MP_QSTR___traceback__, (const byte*)"\x4f\xcf\x0d" "__traceback__")
QDEF(MP_QSTR__percent__hash_o, (const byte*)"\x6c\x1a\x03" "%#o")
QDEF(MP_QSTR__percent__hash_x, (const byte*)"\x7b\x1a\x03" "%#x")
QDEF(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\x58\x37\x05" "{:#b}")
QDEF(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\x73\x1e\x20" "maximum recursion depth exceeded")
QDEF(MP_QSTR__lt_lambda_gt_, (const byte*)"\x80\x8c\x08" "<lambda>")
QDEF(MP_QSTR__lt_listcomp_gt_, (const byte*)"\xd4\x15\x0a" "<listcomp>")
QDEF(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\xcc\x8d\x0a" "<dictcomp>")
QDEF(MP_QSTR__lt_setcomp_gt_, (const byte*)"\x54\x51\x09" "<setcomp>")
QDEF(MP_QSTR__lt_genexpr_gt_, (const byte*)"\x34\x6a\x09" "<genexpr>")
QDEF(MP_QSTR__lt_string_gt_, (const byte*)"\x52\x53\x08" "<string>")
QDEF(MP_QSTR__lt_stdin_gt_, (const byte*)"\xe3\x63\x07" "<stdin>")
QDEF(MP_QSTR_None, (const byte*)"\x6f\xd1\x04" "None")
QDEF(MP_QSTR_StopAsyncIteration, (const byte*)"\xec\xf0\x12" "StopAsyncIteration")
QDEF(MP_QSTR_UnicodeError, (const byte*)"\x22\xd1\x0c" "UnicodeError")
QDEF(MP_QSTR_ViperTypeError, (const byte*)"\xdd\x05\x0e" "ViperTypeError")
QDEF(MP_QSTR_action_add_permission, (const byte*)"\xd1\xc5\x15" "action_add_permission")
QDEF(MP_QSTR_action_free, (const byte*)"\x90\x23\x0b" "action_free")
QDEF(MP_QSTR_action_new, (const byte*)"\x78\x1a\x0a" "action_new")
QDEF(MP_QSTR_action_send, (const byte*)"\x58\x3f\x0b" "action_send")
QDEF(MP_QSTR_add, (const byte*)"\x44\x32\x03" "add")
QDEF(MP_QSTR_addi, (const byte*)"\xad\x7a\x04" "addi")
QDEF(MP_QSTR_align, (const byte*)"\xa8\xfb\x05" "align")
QDEF(MP_QSTR_and_, (const byte*)"\x91\x94\x04" "and_")
QDEF(MP_QSTR_asm_thumb, (const byte*)"\x43\x6d\x09" "asm_thumb")
QDEF(MP_QSTR_asm_xtensa, (const byte*)"\xb0\x12\x0a" "asm_xtensa")
QDEF(MP_QSTR_asr, (const byte*)"\x65\x35\x03" "asr")
QDEF(MP_QSTR_assert_recover_key, (const byte*)"\x0a\x69\x12" "assert_recover_key")
QDEF(MP_QSTR_assert_ripemd160, (const byte*)"\x08\x86\x10" "assert_ripemd160")
QDEF(MP_QSTR_assert_sha1, (const byte*)"\x73\x45\x0b" "assert_sha1")
QDEF(MP_QSTR_assert_sha256, (const byte*)"\xd3\x5b\x0d" "assert_sha256")
QDEF(MP_QSTR_assert_sha512, (const byte*)"\x14\x81\x0d" "assert_sha512")
QDEF(MP_QSTR_b, (const byte*)"\xc7\xb5\x01" "b")
QDEF(MP_QSTR_ball, (const byte*)"\x46\x45\x04" "ball")
QDEF(MP_QSTR_bany, (const byte*)"\x91\x44\x04" "bany")
QDEF(MP_QSTR_bbc, (const byte*)"\x06\x47\x03" "bbc")
QDEF(MP_QSTR_bbs, (const byte*)"\x16\x47\x03" "bbs")
QDEF(MP_QSTR_beq, (const byte*)"\x73\x47\x03" "beq")
QDEF(MP_QSTR_beqz, (const byte*)"\xa9\x35\x04" "beqz")
QDEF(MP_QSTR_bge, (const byte*)"\xa5\x46\x03" "bge")
QDEF(MP_QSTR_bgeu, (const byte*)"\x30\x1b\x04" "bgeu")
QDEF(MP_QSTR_bigint, (const byte*)"\xba\x73\x06" "bigint")
QDEF(MP_QSTR_bin, (const byte*)"\xe0\x48\x03" "bin")
QDEF(MP_QSTR_bl, (const byte*)"\xcb\x6e\x02" "bl")
QDEF(MP_QSTR_blt, (const byte*)"\x5f\x48\x03" "blt")
QDEF(MP_QSTR_bnall, (const byte*)"\x08\x55\x05" "bnall")
QDEF(MP_QSTR_bne, (const byte*)"\x8c\x47\x03" "bne")
QDEF(MP_QSTR_bnez, (const byte*)"\x76\x39\x04" "bnez")
QDEF(MP_QSTR_bnone, (const byte*)"\x4d\x3d\x05" "bnone")
QDEF(MP_QSTR_bound_method, (const byte*)"\x97\xa2\x0c" "bound_method")
QDEF(MP_QSTR_bx, (const byte*)"\xdf\x6e\x02" "bx")
QDEF(MP_QSTR_calcsize, (const byte*)"\x4d\x38\x08" "calcsize")
QDEF(MP_QSTR_call_contract, (const byte*)"\x0a\x5b\x0d" "call_contract")
QDEF(MP_QSTR_callx0, (const byte*)"\x2f\xb6\x06" "callx0")
QDEF(MP_QSTR_chain, (const byte*)"\xe8\xbf\x05" "chain")
QDEF(MP_QSTR_closure, (const byte*)"\x74\xca\x07" "closure")
QDEF(MP_QSTR_clz, (const byte*)"\x50\x4c\x03" "clz")
QDEF(MP_QSTR_cmp, (const byte*)"\x3b\x4c\x03" "cmp")
QDEF(MP_QSTR_complex, (const byte*)"\xc5\x9d\x07" "complex")
QDEF(MP_QSTR_cpsid, (const byte*)"\xe8\xc7\x05" "cpsid")
QDEF(MP_QSTR_cpsie, (const byte*)"\xe9\xc7\x05" "cpsie")
QDEF(MP_QSTR_current_receiver, (const byte*)"\xca\xeb\x10" "current_receiver")
QDEF(MP_QSTR_current_time, (const byte*)"\x46\x41\x0c" "current_time")
QDEF(MP_QSTR_data, (const byte*)"\x15\xdc\x04" "data")
QDEF(MP_QSTR_db_end_i256, (const byte*)"\xf4\xbd\x0b" "db_end_i256")
QDEF(MP_QSTR_db_end_i64, (const byte*)"\x07\x0d\x0a" "db_end_i64")
QDEF(MP_QSTR_db_find_i256, (const byte*)"\xde\xd8\x0c" "db_find_i256")
QDEF(MP_QSTR_db_find_i64, (const byte*)"\x6d\x5b\x0b" "db_find_i64")
QDEF(MP_QSTR_db_get_i256, (const byte*)"\x2d\x2a\x0b" "db_get_i256")
QDEF(MP_QSTR_db_get_i64, (const byte*)"\x3e\xd2\x0a" "db_get_i64")
QDEF(MP_QSTR_db_get_table_count, (const byte*)"\xf7\xae\x12" "db_get_table_count")
QDEF(MP_QSTR_db_idx_end, (const byte*)"\xd9\x86\x0a" "db_idx_end")
QDEF(MP_QSTR_db_idx_find_primary, (const byte*)"\x40\x69\x13" "db_idx_find_primary")
QDEF(MP_QSTR_db_idx_find_secondary, (const byte*)"\xf6\x26\x15" "db_idx_find_secondary")
QDEF(MP_QSTR_db_idx_lowerbound, (const byte*)"\xe7\x21\x11" "db_idx_lowerbound")
QDEF(MP_QSTR_db_idx_next, (const byte*)"\x71\x41\x0b" "db_idx_next")
QDEF(MP_QSTR_db_idx_previous, (const byte*)"\xc7\x7e\x0f" "db_idx_previous")
QDEF(MP_QSTR_db_idx_remove, (const byte*)"\x50\x0e\x0d" "db_idx_remove")
QDEF(MP_QSTR_db_idx_store, (const byte*)"\xc9\xb4\x0c" "db_idx_store")
QDEF(MP_QSTR_db_idx_update, (const byte*)"\x07\x5c\x0d" "db_idx_update")
QDEF(MP_QSTR_db_idx_upperbound, (const byte*)"\x26\x52\x11" "db_idx_upperbound")
QDEF(MP_QSTR_db_lowerbound_i256, (const byte*)"\x8a\x8e\x12" "db_lowerbound_i256")
QDEF(MP_QSTR_db_lowerbound_i64, (const byte*)"\xb9\xa7\x11" "db_lowerbound_i64")
QDEF(MP_QSTR_db_next_i256, (const byte*)"\xdc\xbf\x0c" "db_next_i256")
QDEF(MP_QSTR_db_next_i64, (const byte*)"\x2f\x6a\x0b" "db_next_i64")
QDEF(MP_QSTR_db_previous_i256, (const byte*)"\xea\x6f\x10" "db_previous_i256")
QDEF(MP_QSTR_db_previous_i64, (const byte*)"\xd9\xe4\x0f" "db_previous_i64")
QDEF(MP_QSTR_db_remove_i256, (const byte*)"\x9d\x94\x0e" "db_remove_i256")
QDEF(MP_QSTR_db_remove_i64, (const byte*)"\xce\x2a\x0d" "db_remove_i64")
QDEF(MP_QSTR_db_store_i256, (const byte*)"\xe4\x06\x0d" "db_store_i256")
QDEF(MP_QSTR_db_store_i64, (const byte*)"\x17\x74\x0c" "db_store_i64")
QDEF(MP_QSTR_db_update_i256, (const byte*)"\x2a\x7d\x0e" "db_update_i256")
QDEF(MP_QSTR_db_update_i64, (const byte*)"\x19\x4a\x0d" "db_update_i64")
QDEF(MP_QSTR_db_upperbound_i256, (const byte*)"\xab\x17\x12" "db_upperbound_i256")
QDEF(MP_QSTR_db_upperbound_i64, (const byte*)"\x78\x18\x11" "db_upperbound_i64")
QDEF(MP_QSTR_decode, (const byte*)"\xa9\x59\x06" "decode")
QDEF(MP_QSTR_default, (const byte*)"\xce\x7d\x07" "default")
QDEF(MP_QSTR_delattr, (const byte*)"\xdb\xc8\x07" "delattr")
QDEF(MP_QSTR_deleter, (const byte*)"\x6e\xdb\x07" "deleter")
QDEF(MP_QSTR_dict_view, (const byte*)"\x2d\xa9\x09" "dict_view")
QDEF(MP_QSTR_difference, (const byte*)"\x72\x24\x0a" "difference")
QDEF(MP_QSTR_difference_update, (const byte*)"\x9c\xfa\x11" "difference_update")
QDEF(MP_QSTR_discard, (const byte*)"\x0f\x71\x07" "discard")
QDEF(MP_QSTR_doc, (const byte*)"\x2d\x1f\x03" "doc")
QDEF(MP_QSTR_encode, (const byte*)"\x43\xca\x06" "encode")
QDEF(MP_QSTR_enumerate, (const byte*)"\x71\xba\x09" "enumerate")
QDEF(MP_QSTR_eosio_assert, (const byte*)"\x87\xf7\x0c" "eosio_assert")
QDEF(MP_QSTR_eosio_assert_code, (const byte*)"\x55\xdb\x11" "eosio_assert_code")
QDEF(MP_QSTR_eosio_assert_message, (const byte*)"\xb3\x5a\x14" "eosio_assert_message")
QDEF(MP_QSTR_expiration, (const byte*)"\xce\x41\x0a" "expiration")
QDEF(MP_QSTR_filter, (const byte*)"\x25\xbe\x06" "filter")
QDEF(MP_QSTR_float, (const byte*)"\x35\x44\x05" "float")
QDEF(MP_QSTR_float128, (const byte*)"\x2e\x12\x08" "float128")
QDEF(MP_QSTR_fromkeys, (const byte*)"\x37\xbd\x08" "fromkeys")
QDEF(MP_QSTR_function, (const byte*)"\x27\x02\x08" "function")
QDEF(MP_QSTR_generator, (const byte*)"\x96\xc3\x09" "generator")
QDEF(MP_QSTR_get_action, (const byte*)"\x12\x3f\x0a" "get_action")
QDEF(MP_QSTR_get_active_producers, (const byte*)"\xc4\x4a\x14" "get_active_producers")
QDEF(MP_QSTR_get_blockchain_parameters, (const byte*)"\x4d\x1a\x19" "get_blockchain_parameters")
QDEF(MP_QSTR_get_context_free_data, (const byte*)"\x17\xff\x15" "get_context_free_data")
QDEF(MP_QSTR_get_resource_limits, (const byte*)"\x1f\x2a\x13" "get_resource_limits")
QDEF(MP_QSTR_getter, (const byte*)"\x90\xb2\x06" "getter")
QDEF(MP_QSTR_has_auth, (const byte*)"\xe8\xbb\x08" "has_auth")
QDEF(MP_QSTR_heap_lock, (const byte*)"\xad\x8c\x09" "heap_lock")
QDEF(MP_QSTR_heap_unlock, (const byte*)"\x56\x2d\x0b" "heap_unlock")
QDEF(MP_QSTR_hello, (const byte*)"\xe7\xed\x05" "hello")
QDEF(MP_QSTR_hex, (const byte*)"\x70\x50\x03" "hex")
QDEF(MP_QSTR_imag, (const byte*)"\x47\xb7\x04" "imag")
QDEF(MP_QSTR_intersection, (const byte*)"\x28\x2a\x0c" "intersection")
QDEF(MP_QSTR_intersection_update, (const byte*)"\x06\xdd\x13" "intersection_update")
QDEF(MP_QSTR_is_account, (const byte*)"\x21\x97\x0a" "is_account")
QDEF(MP_QSTR_is_privileged, (const byte*)"\x1b\xc6\x0d" "is_privileged")
QDEF(MP_QSTR_isdisjoint, (const byte*)"\xf7\x68\x0a" "isdisjoint")
QDEF(MP_QSTR_issubset, (const byte*)"\xb9\xc1\x08" "issubset")
QDEF(MP_QSTR_issuperset, (const byte*)"\xfc\xec\x0a" "issuperset")
QDEF(MP_QSTR_iterable, (const byte*)"\x25\x92\x08" "iterable")
QDEF(MP_QSTR_iterator, (const byte*)"\x47\xbe\x08" "iterator")
QDEF(MP_QSTR_j, (const byte*)"\xcf\xb5\x01" "j")
QDEF(MP_QSTR_jx, (const byte*)"\xd7\x6f\x02" "jx")
QDEF(MP_QSTR_l16si, (const byte*)"\x14\x83\x05" "l16si")
QDEF(MP_QSTR_l16ui, (const byte*)"\x52\x83\x05" "l16ui")
QDEF(MP_QSTR_l32i, (const byte*)"\x41\x8f\x04" "l32i")
QDEF(MP_QSTR_l8ui, (const byte*)"\x6d\x59\x04" "l8ui")
QDEF(MP_QSTR_label, (const byte*)"\x43\xe7\x05" "label")
QDEF(MP_QSTR_ldr, (const byte*)"\x5f\x40\x03" "ldr")
QDEF(MP_QSTR_ldrb, (const byte*)"\x5d\x4c\x04" "ldrb")
QDEF(MP_QSTR_ldrex, (const byte*)"\xe2\xd7\x05" "ldrex")
QDEF(MP_QSTR_ldrh, (const byte*)"\x57\x4c\x04" "ldrh")
QDEF(MP_QSTR_lsl, (const byte*)"\xb6\x41\x03" "lsl")
QDEF(MP_QSTR_lsr, (const byte*)"\xa8\x41\x03" "lsr")
QDEF(MP_QSTR_max, (const byte*)"\xb1\x43\x03" "max")
QDEF(MP_QSTR_min, (const byte*)"\xaf\x42\x03" "min")
QDEF(MP_QSTR_module, (const byte*)"\xbf\x99\x06" "module")
QDEF(MP_QSTR_mov, (const byte*)"\xf1\x43\x03" "mov")
QDEF(MP_QSTR_mov_n, (const byte*)"\x60\x0c\x05" "mov_n")
QDEF(MP_QSTR_movi, (const byte*)"\x78\xc2\x04" "movi")
QDEF(MP_QSTR_movt, (const byte*)"\x65\xc2\x04" "movt")
QDEF(MP_QSTR_movw, (const byte*)"\x66\xc2\x04" "movw")
QDEF(MP_QSTR_movwt, (const byte*)"\x52\x0f\x05" "movwt")
QDEF(MP_QSTR_mrs, (const byte*)"\x89\x45\x03" "mrs")
QDEF(MP_QSTR_mull, (const byte*)"\x3d\x0c\x04" "mull")
QDEF(MP_QSTR_n2s, (const byte*)"\x4a\x52\x03" "n2s")
QDEF(MP_QSTR_name, (const byte*)"\xa2\x75\x04" "name")
QDEF(MP_QSTR_native, (const byte*)"\x84\x0b\x06" "native")
QDEF(MP_QSTR_nop, (const byte*)"\xb4\x57\x03" "nop")
QDEF(MP_QSTR_oct, (const byte*)"\xfd\x5c\x03" "oct")
QDEF(MP_QSTR_opt_level, (const byte*)"\x87\x67\x09" "opt_level")
QDEF(MP_QSTR_or_, (const byte*)"\x27\x5e\x03" "or_")
QDEF(MP_QSTR_pack, (const byte*)"\xbc\xd1\x04" "pack")
QDEF(MP_QSTR_pack_into, (const byte*)"\x1f\xa9\x09" "pack_into")
QDEF(MP_QSTR_pend_throw, (const byte*)"\xf3\x74\x0a" "pend_throw")
QDEF(MP_QSTR_property, (const byte*)"\xc2\x29\x08" "property")
QDEF(MP_QSTR_ptr, (const byte*)"\x53\x70\x03" "ptr")
QDEF(MP_QSTR_ptr16, (const byte*)"\xf4\xca\x05" "ptr16")
QDEF(MP_QSTR_ptr32, (const byte*)"\xb2\xca\x05" "ptr32")
QDEF(MP_QSTR_ptr8, (const byte*)"\x8b\x7a\x04" "ptr8")
QDEF(MP_QSTR_publication_time, (const byte*)"\x73\xd2\x10" "publication_time")
QDEF(MP_QSTR_push, (const byte*)"\xbb\x7e\x04" "push")
QDEF(MP_QSTR_rbit, (const byte*)"\xe8\xee\x04" "rbit")
QDEF(MP_QSTR_read_action_data, (const byte*)"\x99\xea\x10" "read_action_data")
QDEF(MP_QSTR_read_transaction, (const byte*)"\xec\xed\x10" "read_transaction")
QDEF(MP_QSTR_real, (const byte*)"\xbf\xf9\x04" "real")
QDEF(MP_QSTR_recover_key, (const byte*)"\xd7\x9b\x0b" "recover_key")
QDEF(MP_QSTR_require_auth, (const byte*)"\xbf\x84\x0c" "require_auth")
QDEF(MP_QSTR_require_auth2, (const byte*)"\xad\x1c\x0d" "require_auth2")
QDEF(MP_QSTR_require_recipient, (const byte*)"\xec\x4c\x11" "require_recipient")
QDEF(MP_QSTR_ret_n, (const byte*)"\xf7\x07\x05" "ret_n")
QDEF(MP_QSTR_reversed, (const byte*)"\xa1\x6e\x08" "reversed")
QDEF(MP_QSTR_ripemd160, (const byte*)"\x55\x64\x09" "ripemd160")
QDEF(MP_QSTR_s16i, (const byte*)"\xb8\x3b\x04" "s16i")
QDEF(MP_QSTR_s2n, (const byte*)"\x4a\x85\x03" "s2n")
QDEF(MP_QSTR_s32i, (const byte*)"\x3e\x34\x04" "s32i")
QDEF(MP_QSTR_s8i, (const byte*)"\x07\x86\x03" "s8i")
QDEF(MP_QSTR_say_hello, (const byte*)"\x53\x8b\x09" "say_hello")
QDEF(MP_QSTR_say_hello2, (const byte*)"\x81\xf5\x0a" "say_hello2")
QDEF(MP_QSTR_sdiv, (const byte*)"\xcd\x7a\x04" "sdiv")
QDEF(MP_QSTR_send_context_free_inline, (const byte*)"\xe4\x36\x18" "send_context_free_inline")
QDEF(MP_QSTR_send_context_free_inline_raw, (const byte*)"\x1f\xe5\x1c" "send_context_free_inline_raw")
QDEF(MP_QSTR_send_inline, (const byte*)"\x2f\xac\x0b" "send_inline")
QDEF(MP_QSTR_send_inline_raw, (const byte*)"\x14\x00\x0f" "send_inline_raw")
QDEF(MP_QSTR_set_blockchain_parameters, (const byte*)"\x59\xa8\x19" "set_blockchain_parameters")
QDEF(MP_QSTR_set_privileged, (const byte*)"\x03\x39\x0e" "set_privileged")
QDEF(MP_QSTR_set_proposed_producers, (const byte*)"\xdc\x69\x16" "set_proposed_producers")
QDEF(MP_QSTR_set_resource_limits, (const byte*)"\x0b\xbb\x13" "set_resource_limits")
QDEF(MP_QSTR_setter, (const byte*)"\x04\x59\x06" "setter")
QDEF(MP_QSTR_sha1, (const byte*)"\x8e\xac\x04" "sha1")
QDEF(MP_QSTR_sha256, (const byte*)"\x2e\x01\x06" "sha256")
QDEF(MP_QSTR_sha512, (const byte*)"\x69\xfd\x06" "sha512")
QDEF(MP_QSTR_slice, (const byte*)"\xb5\xf4\x05" "slice")
QDEF(MP_QSTR_strb, (const byte*)"\x32\x37\x04" "strb")
QDEF(MP_QSTR_strex, (const byte*)"\xad\x1d\x05" "strex")
QDEF(MP_QSTR_strh, (const byte*)"\x38\x37\x04" "strh")
QDEF(MP_QSTR_sub, (const byte*)"\x21\x8d\x03" "sub")
QDEF(MP_QSTR_symmetric_difference, (const byte*)"\xce\x67\x14" "symmetric_difference")
QDEF(MP_QSTR_symmetric_difference_update, (const byte*)"\x60\xf8\x1b" "symmetric_difference_update")
QDEF(MP_QSTR_tapos_block_num, (const byte*)"\x03\x4b\x0f" "tapos_block_num")
QDEF(MP_QSTR_tapos_block_prefix, (const byte*)"\xe5\xaa\x12" "tapos_block_prefix")
QDEF(MP_QSTR_to_int, (const byte*)"\x92\xb0\x06" "to_int")
QDEF(MP_QSTR_to_str, (const byte*)"\xd4\xea\x06" "to_str")
QDEF(MP_QSTR_transaction_add_action, (const byte*)"\x3e\x15\x16" "transaction_add_action")
QDEF(MP_QSTR_transaction_add_context_free_action, (const byte*)"\xb5\x79\x23" "transaction_add_context_free_action")
QDEF(MP_QSTR_transaction_free, (const byte*)"\x8a\x29\x10" "transaction_free")
QDEF(MP_QSTR_transaction_new, (const byte*)"\xa2\x08\x0f" "transaction_new")
QDEF(MP_QSTR_transaction_send, (const byte*)"\xc2\x4f\x10" "transaction_send")
QDEF(MP_QSTR_udiv, (const byte*)"\x8b\x31\x04" "udiv")
QDEF(MP_QSTR_uint, (const byte*)"\xe3\x3d\x04" "uint")
QDEF(MP_QSTR_union, (const byte*)"\xf6\x7c\x05" "union")
QDEF(MP_QSTR_unpack, (const byte*)"\x07\x3c\x06" "unpack")
QDEF(MP_QSTR_unpack_from, (const byte*)"\x0e\x6d\x0b" "unpack_from")
QDEF(MP_QSTR_ustruct, (const byte*)"\x47\x08\x07" "ustruct")
QDEF(MP_QSTR_vcmp, (const byte*)"\xad\xc1\x04" "vcmp")
QDEF(MP_QSTR_vcvt_f32_s32, (const byte*)"\x47\xc9\x0c" "vcvt_f32_s32")
QDEF(MP_QSTR_vcvt_s32_f32, (const byte*)"\x07\x33\x0c" "vcvt_s32_f32")
QDEF(MP_QSTR_viper, (const byte*)"\x5d\x23\x05" "viper")
QDEF(MP_QSTR_vldr, (const byte*)"\xc9\x07\x04" "vldr")
QDEF(MP_QSTR_vmov, (const byte*)"\xe7\x0a\x04" "vmov")
QDEF(MP_QSTR_vmrs, (const byte*)"\x9f\x09\x04" "vmrs")
QDEF(MP_QSTR_vneg, (const byte*)"\xff\xee\x04" "vneg")
QDEF(MP_QSTR_vsqrt, (const byte*)"\xf7\x42\x05" "vsqrt")
QDEF(MP_QSTR_vstr, (const byte*)"\xc6\x7e\x04" "vstr")
QDEF(MP_QSTR_wfi, (const byte*)"\x9d\x7e\x03" "wfi")
QDEF(MP_QSTR_xor, (const byte*)"\x20\x93\x03" "xor")
